---
# - debug:
#     var: group_names

# - fail:
#     msg: I will run on webserver
#   when:
#     - "'webservers' in group_names"

# - fail:
#     msg: I will run on proxmox
#   when:
#     - "'proxmox' in group_names"

- name: check for nginx
  stat:
    path: /etc/nginx
  register: has_nginx
  when:
    - "'webservers' in group_names"

- name: check for pmgproxy
  stat:
    path: /etc/pmg
  register: has_pmg

- name: check for dovecot
  stat:
    path: /etc/dovecot
  register: has_dovecot

- name: Create dir for snippets
  file:
    state: directory
    path: /etc/nginx/snippets
    owner: root
    group: root
    mode: 0755
  when:
    - "'webservers' in group_names"
    - has_nginx.stat.exists

- name: template in the ssl snippet
  template:
    dest: '/etc/nginx/snippets/{{ cert_name }}.conf'
    src: templates/nginx_ssl_snip.conf.j2
    owner: root
    group: root
    mode: 0755
  when:
    - "'webservers' in group_names"
    - has_nginx.stat.exists

- name: Build the pki directories
  file:
    state: directory
    path: '{{ item }}'
    owner: root
    group: root
    mode: 0755
  with_items:
    - '{{ pki_dir }}'
    - '{{ cert_dir }}'
    - '{{ pki_dir }}/letsencrypt'
  when:
    - "'webservers' in group_names"

- name: push some certs to some places
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: root
    group: root
    mode: '{{ item.mode }}'
  with_items:
    - src: '{{ keydir }}/{{ cert_name }}.chained.cert'
      dest: '{{ cert_dir }}/{{ cert_name }}.chained.cert'
      mode: '0644'
    - src: '{{ keydir }}/{{ cert_name }}.cert'
      dest: '{{ cert_dir }}/{{ cert_name }}.cert'
      mode: '0644'
    - src: '{{ keydir }}/{{ cert_name }}.key'
      dest: '{{ cert_dir }}/{{ cert_name }}.key'
      mode: '0644'
    - src: '{{ keydir }}/intermediate.pem'
      dest: '{{ intermediate_path }}'
      mode: '0644'
  register: pushed_certs
  when:
    - "'webservers' in group_names"

- name: reload nginx
  systemd:
    name: nginx
    state: reloaded
  when:
    - "'webservers' in group_names"
    - has_nginx.stat.exists
    - pushed_certs is changed

# Now push me to the proxmox servers

- name: push some certs to some proxmox places
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: root
    group: www-data
    mode: '{{ item.mode }}'
  with_items:
    - src: '{{ keydir }}/{{ cert_name }}.chained.cert'
      dest: /root/pveproxy-ssl.pem
      mode: '0640'
    - src: '{{ keydir }}/{{ cert_name }}.key'
      dest: /root/pveproxy-ssl.key
      mode: '0640'
  register: pushed_certs
  when:
    - "'proxmox' in group_names"

- name: copy the files in by hand apparently
  command: 'cp /root/{{ item }} /etc/pve/local/{{ item }}'
  args:
    warn: false
  with_items:
    - pveproxy-ssl.pem
    - pveproxy-ssl.key
  when:
    - "'proxmox' in group_names"
    - pushed_certs is changed
  
- name: reload pveproxy
  systemd:
    name: pveproxy
    state: reloaded
  when:
    - "'proxmox' in group_names"
    - pushed_certs is changed

# Now deal with FreeNAS

- name: Create /etc/pki
  file:
    state: directory
    path: /etc/pki
    owner: root
    group: wheel
    mode: 0755
  when: "'platforms_FreeNAS' in group_names"

- name: push some certs to FreeNAS
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: root
    group: wheel
    mode: '{{ item.mode }}'
  with_items:
    - src: '{{ keydir }}/{{ cert_name }}.chained.cert'
      dest: '{{ pki_dir }}/freenas_default.crt'
      mode: '0644'
    - src: '{{ keydir }}/{{ cert_name }}.key'
      dest: '{{ pki_dir }}/freenas_default.key'
      mode: '0400'
    - src: '{{ keydir }}/{{ cert_name }}.chained.cert'
      dest: '/etc/certificates/freenas_default.crt'
      mode: '0644'
    - src: '{{ keydir }}/{{ cert_name }}.key'
      dest: '/etc/certificates/freenas_default.key'
      mode: '0400'
  when: "'platforms_FreeNAS' in group_names"

- name: push some certs to FreeNAS-minio
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: minio
    group: minio
    mode: '{{ item.mode }}'
  with_items:
    - src: '{{ keydir }}/{{ cert_name }}.chained.cert'
      dest: '/usr/local/etc/minio/certs/public.crt'
      mode: '0644'
    - src: '{{ keydir }}/{{ cert_name }}.key'
      dest: '/usr/local/etc/minio/certs/private.key'
      mode: '0600'
  when: "'platforms_FreeNAS' in group_names"

- name: Restart nginx
  service:
    name: nginx
    state: reloaded
  when: "'platforms_FreeNAS' in group_names"

- name: Restart minio
  service:
    name: minio
    state: restarted
  when: "'platforms_FreeNAS' in group_names"

- name: Install pmgproxy cert
  copy:
    src: '{{ keydir }}/{{ cert_name }}.concat.cert'
    dest: /etc/pmg/pmg-api.pem
    owner: root
    group: www-data
    mode: 0640
  when: has_pmg.stat.exists
  register: pushed_pmgcert

- name: restart pmgproxy
  systemd:
    name: pmgproxy
    state: reloaded
  when:
    - has_pmg.stat.exists
    - pushed_pmgcert is changed

- name: restart dovecot
  systemd:
    name: dovecot
    state: reloaded
  when:
    - has_dovecot.stat.exists
    - pushed_certs is changed

