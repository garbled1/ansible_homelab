---
- name: Create VM in netbox
  netbox.netbox.netbox_virtual_machine:
    netbox_url: '{{ netbox_server }}'
    netbox_token: '{{ netbox_token }}'
    data:
      name: '{{ inventory_hostname_short }}'
      cluster: '{{ vm_cluster }}'
      #virtual_machine_role: 'Server'
      status: 'Active'
      tags:
        - VM
  register: vm_info
  delegate_to: localhost

- name: Create interface for VM in netbox
  netbox.netbox.netbox_vm_interface:
    netbox_url: '{{ netbox_server }}'
    netbox_token: '{{ netbox_token }}'
    data:
      virtual_machine: '{{ inventory_hostname_short }}'
      name: Ethernet
      mac_address: '{{ ansible_default_ipv4.macaddress }}'
    state: present
  register: vm_iface_info
  delegate_to: localhost

# - name: Assign IP to interface
#   netbox.netbox.netbox_ip_address:
#     netbox_url: '{{ netbox_server }}'
#     netbox_token: '{{ netbox_token }}'
#     data:
#       prefix: '{{ netbox_prefix }}'
#       vrf: '{{ netbox_vrf }}'
#       address: '{{ ansible_default_ipv4.address }}'
#       dns_name: '{{ inventory_hostname_short }}'
#       #family: 4
#       interface:
#         name: Ethernet
#         virtual_machine: '{{ inventory_hostname_short }}'
#     state: present
#   register: vm_ip_info
#   delegate_to: localhost

- name: Get interface id
  uri:
    url: '{{ netbox_server }}/api/virtualization/interfaces/?virtual_machine={{ inventory_hostname_short }}'
    headers:
      Authorization: 'Token {{ netbox_token }}'
    method: GET
    status_code: 200
  delegate_to: localhost
  register: netbox_iface

- name: Find the id of the IP
  netbox.netbox.netbox_ip_address:
    netbox_url: '{{ netbox_server }}'
    netbox_token: '{{ netbox_token }}'
    data:
      address: '{{ ansible_default_ipv4.address }}'
    state: present
  register: netbox_ip
  delegate_to: localhost

- name: Assign IP to interface
  uri:
    url: '{{ netbox_server }}/api/ipam/ip-addresses/{{ netbox_ip.ip_address.id }}/'
    headers:
      Authorization: 'Token {{ netbox_token }}'
    method: PUT
    status_code: 200
    body_format: json
    body:
      vrf: 1
      address: '{{ ansible_default_ipv4.address }}'
      dns_name: '{{ inventory_hostname_short }}'
      interface: '{{ netbox_iface.json.results[0]["id"] }}'
      family: 4
  delegate_to: localhost

- name: Mark interface as primary
  netbox.netbox.netbox_virtual_machine:
    netbox_url: '{{ netbox_server }}'
    netbox_token: '{{ netbox_token }}'
    data:
      name: '{{ inventory_hostname_short }}'
      cluster: '{{ vm_cluster }}'
      #virtual_machine_role: 'Server'
      status: 'Active'
      tags:
        - VM
      primary_ip4: '{{ ansible_default_ipv4.address }}'
  register: vm_info
  delegate_to: localhost

- name: Fix role
  uri:
    url: '{{ netbox_server }}/api/virtualization/virtual-machines/'
    headers:
      Authorization: 'Token {{ netbox_token }}'
    method: POST
    body:
      role: 8
      name: '{{ inventory_hostname_short }}'
    body_format: json
    status_code:
      - 201
      - 200
  delegate_to: localhost
